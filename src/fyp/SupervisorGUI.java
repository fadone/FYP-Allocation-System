/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package fyp;

import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.util.Vector;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/**
 *
 * @author Muhammad Ali
 */
public class SupervisorGUI extends javax.swing.JFrame {

    /**
     * Creates new form SupervisorGUI
     */
    public SupervisorGUI(int id) {
        initComponents();
        sup_id = id;
        setUserName();
        updateProjTable();
        updateAllocTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        logoutBtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        allocTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        projNameTF = new javax.swing.JTextField();
        projAddBtn = new javax.swing.JButton();
        projUpdatebtn = new javax.swing.JButton();
        projDeleteBtn = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jScrollPane2 = new javax.swing.JScrollPane();
        projTable = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        userNameLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        logoutBtn.setText("Logout");
        logoutBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logoutBtnActionPerformed(evt);
            }
        });

        allocTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Name", "Project"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(allocTable);
        if (allocTable.getColumnModel().getColumnCount() > 0) {
            allocTable.getColumnModel().getColumn(0).setMinWidth(50);
            allocTable.getColumnModel().getColumn(0).setPreferredWidth(50);
            allocTable.getColumnModel().getColumn(0).setMaxWidth(50);
            allocTable.getColumnModel().getColumn(1).setMinWidth(120);
            allocTable.getColumnModel().getColumn(1).setPreferredWidth(120);
            allocTable.getColumnModel().getColumn(1).setMaxWidth(120);
            allocTable.getColumnModel().getColumn(2).setPreferredWidth(30);
        }

        jLabel1.setText("Project:");

        projAddBtn.setText("Add");
        projAddBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                projAddBtnActionPerformed(evt);
            }
        });

        projUpdatebtn.setText("Update");
        projUpdatebtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                projUpdatebtnActionPerformed(evt);
            }
        });

        projDeleteBtn.setText("Delete");
        projDeleteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                projDeleteBtnActionPerformed(evt);
            }
        });

        projTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Name"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        projTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                projTableMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(projTable);
        if (projTable.getColumnModel().getColumnCount() > 0) {
            projTable.getColumnModel().getColumn(0).setMinWidth(30);
            projTable.getColumnModel().getColumn(0).setPreferredWidth(30);
            projTable.getColumnModel().getColumn(0).setMaxWidth(30);
        }

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel2.setText("Your Allocated Students:");

        userNameLabel.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        userNameLabel.setText("Welcome Mr. Name!");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(userNameLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 304, Short.MAX_VALUE)
                                .addComponent(logoutBtn))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(projNameTF, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(102, 102, 102)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(projDeleteBtn, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(projUpdatebtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(projAddBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addContainerGap(278, Short.MAX_VALUE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(22, 22, 22)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(logoutBtn)
                    .addComponent(userNameLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 98, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(projNameTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(projAddBtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(projUpdatebtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(projDeleteBtn)
                .addGap(63, 63, 63)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(53, 53, 53)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(247, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void logoutBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logoutBtnActionPerformed
        dispose();
        new LoginGUI().setVisible(true);
    }//GEN-LAST:event_logoutBtnActionPerformed

    private void projAddBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_projAddBtnActionPerformed
            String name = projNameTF.getText().trim();
            access.add_project(name);
            projNameTF.setText("");
            updateProjTable();
        // TODO add your handling code here:
    }//GEN-LAST:event_projAddBtnActionPerformed

    private void projUpdatebtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_projUpdatebtnActionPerformed
        int i = projTable.getSelectedRow();
        TableModel model = projTable.getModel();
        int id = Integer.parseInt(model.getValueAt(i, 0).toString());
        String name = projNameTF.getText().trim();
        access.update_project(id, name);
        projNameTF.setText("");
        updateProjTable();
        // TODO add your handling code here:
    }//GEN-LAST:event_projUpdatebtnActionPerformed

    private void projTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_projTableMouseClicked
        int i = projTable.getSelectedRow();
        TableModel model = projTable.getModel();
        projNameTF.setText(model.getValueAt(i, 1).toString());
        // TODO add your handling code here:
    }//GEN-LAST:event_projTableMouseClicked

    private void projDeleteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_projDeleteBtnActionPerformed
        int i = projTable.getSelectedRow();
        TableModel model = projTable.getModel();
        int id = Integer.parseInt(model.getValueAt(i, 0).toString());
        access.delete_project(id);
        projNameTF.setText("");
        updateProjTable();
        // TODO add your handling code here:
    }//GEN-LAST:event_projDeleteBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SupervisorGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SupervisorGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SupervisorGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SupervisorGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SupervisorGUI(1).setVisible(true);
            }
        });
    }

DataAccess access = new DataAccess();
int sup_id;

public void updateProjTable(){
        try{
        int CC;
            ResultSet rs = access.read_projects();
            ResultSetMetaData RSMD = rs.getMetaData();
            CC = RSMD.getColumnCount();
            DefaultTableModel DFT = (DefaultTableModel) projTable.getModel();
            DFT.setRowCount(0);

            while (rs.next()) {
                Vector v2 = new Vector();
           
                for (int ii = 1; ii <= CC; ii++) {
                    v2.add(rs.getString("id"));
                    v2.add(rs.getString("name"));
                }
                DFT.addRow(v2);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

public void setUserName(){
try{    
    ResultSet std = access.search_supervisor(sup_id);
    if(std.next()){
    userNameLabel.setText("Welcome Mr. "+std.getString("name")+"!");
    }else{
    userNameLabel.setText("Welcome Mr. Nobody!");
    }
} catch (Exception e) {
            e.printStackTrace();
    }
}

public void updateAllocTable(){
        try{
        int CC;
            ResultSet rs = access.read_students();
            
            ResultSetMetaData RSMD = rs.getMetaData();
            CC = RSMD.getColumnCount();
            DefaultTableModel DFT = (DefaultTableModel) allocTable.getModel();
            DFT.setRowCount(0);
            while (rs.next()) {
                Vector v2 = new Vector();
                boolean std = false;
                  for (int ii = 1; ii <= CC; ii++) {
                    int id = rs.getInt("supervisor_id");
                    if(id==0) continue;
                    if(id != sup_id) continue;
                    ResultSet project = access.search_project(rs.getInt("project_id"));
                    String project_name = "";
                    if(project.next()) project_name = project.getString("name");
                    v2.add(rs.getString("id"));
                    v2.add(rs.getString("name"));
                    v2.add(project_name);
                    
                    std = true;
                }
                if(std) DFT.addRow(v2);
            }
        } catch (Exception e) {
             e.printStackTrace();
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable allocTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JButton logoutBtn;
    private javax.swing.JButton projAddBtn;
    private javax.swing.JButton projDeleteBtn;
    private javax.swing.JTextField projNameTF;
    private javax.swing.JTable projTable;
    private javax.swing.JButton projUpdatebtn;
    private javax.swing.JLabel userNameLabel;
    // End of variables declaration//GEN-END:variables
}
